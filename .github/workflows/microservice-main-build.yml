name: Microservice Main Build

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["common-repo.yml"]
    types:
      - completed

jobs:
  dispatcher:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Dispatch
        id: dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.myPAT }}
          repository: vcpsuthakar/common
          event_type: test_dispatch
          client_payload: '{"github": ${{ toJson(github) }}}'

  wait-for-target:
    runs-on: ubuntu-latest
    needs: dispatcher
    steps:
      - name: Wait for Target Workflow to Complete
        id: wait-for-target
        run: |
          TARGET_REPO="vcpsuthakar/common"
          TARGET_WORKFLOW="common-repo.yml" 
          POLL_INTERVAL=30
          MAX_WAIT_TIME=1800
          WAIT_TIME=0

          until [ "$WAIT_TIME" -ge "$MAX_WAIT_TIME" ]; do
            STATUS=$(curl -s -H "Authorization: Bearer ${{ secrets.REPO_TOKEN }}" \
              "https://api.github.com/repos/$TARGET_REPO/actions/workflows/$TARGET_WORKFLOW/runs" | jq -r '.workflow_runs[0].conclusion')
          #  STATUS=$(curl -s -H "Authorization: Bearer ${{ secrets.REPO_TOKEN }}" \
          #      "https://api.github.com/repos/$TARGET_REPO/actions/workflows/$TARGET_WORKFLOW/runs" | jq -r --arg target_workflow "${{ github.workflow }}" '.workflow_runs[] | select(.workflow.name == $target_workflow) | .conclusion')
            
            if [ "$STATUS" != "null" ]; then
              if [ "$STATUS" == "success" ]; then
                echo "Target workflow has completed successfully."
                break
              else
                echo "Target workflow failed. Aborting."
                exit 1
              fi
            fi

            sleep $POLL_INTERVAL
            WAIT_TIME=$((WAIT_TIME + POLL_INTERVAL))
          done
          
          if [ "$WAIT_TIME" -ge "$MAX_WAIT_TIME" ]; then
            echo "Timed out waiting for target workflow to complete. Aborting."
            exit 1
          fi

      - name: Set Output
        run: echo "::set-output name=target_status::completed"
  build:
    runs-on: ubuntu-latest
    needs: wait-for-target    
    steps:
     - name: Checkout Microservice Repo
       uses: actions/checkout@v2
